{"version":3,"sources":["assets/logo-altogironew.svg","components/Navbar.tsx","components/Layout.tsx","components/QrCode.tsx","App.tsx","index.tsx"],"names":["NavBar","className","src","logoImg","alt","Layout","children","QrCode","qrRef","useRef","useState","url","setUrl","color","setColor","qrCode","id","size","renderAs","value","bgColor","fgColor","level","onSubmit","evt","preventDefault","svg","current","querySelector","svgXML","XMLSerializer","serializeToString","dataUrl","encodeURIComponent","anchor","document","createElement","href","download","body","appendChild","click","removeChild","type","onChange","e","target","placeholder","ref","App","addEventListener","ReactDOM","render"],"mappings":"yKAAe,MAA0B,6C,OCE1B,SAASA,IACtB,OACE,qBAAKC,UAAU,MAAf,SACE,qBAAKC,IAAKC,EAASC,IAAI,OAAOH,UAAU,WCG/B,SAASI,EAAT,GAA6C,IAA3BC,EAA0B,EAA1BA,SAC/B,OACE,gCACE,cAACN,EAAD,IAEA,qBAAKC,UAAU,YAAf,SACE,qBAAKA,UAAU,UAAf,SAA0BK,S,4BCTnB,SAASC,IACtB,IAAMC,EAAQC,mBADiB,EAGTC,mBAAS,IAHA,mBAGxBC,EAHwB,KAGnBC,EAHmB,OAIJF,mBAAS,WAJL,mBAIxBG,EAJwB,KAIjBC,EAJiB,KAqCzBC,EACJ,cAAC,IAAD,CACEC,GAAG,WACHC,KAAM,IACNC,SAAU,MACVC,MAAOR,EACPS,QAAQ,QACRC,QAASR,EACTS,MAAM,MAUV,OACE,sBAAKrB,UAAU,eAAf,UAEE,uBAAMsB,SAtCc,SAACC,GACvBA,EAAIC,iBAEJ,IAAMC,EAAMlB,EAAMmB,QAAQC,cAAc,OAClCC,GAAS,IAAIC,eAAgBC,kBAAkBL,GAC/CM,EAAU,kBAAoBC,mBAAmBJ,GAEjDK,EAASC,SAASC,cAAc,KACtCF,EAAOG,KAAOL,EACdE,EAAOI,SAAP,UAAqB3B,EAArB,QACAwB,SAASI,KAAKC,YAAYN,GAC1BA,EAAOO,QACPN,SAASI,KAAKG,YAAYR,IA0BQjC,UAAU,qBAA1C,UAEE,uBACE0C,KAAK,OACLxB,MAAOR,EACPiC,SAAU,SAACC,GAAD,OAAOjC,EAAOiC,EAAEC,OAAO3B,QACjC4B,YAAY,6CAGd,uBACEJ,KAAK,OACLxB,MAAON,EACP+B,SAAU,SAACC,GAAD,OAAO/B,EAAS+B,EAAEC,OAAO3B,QACnC4B,YAAY,4BAGd,wBAAQJ,KAAK,SAAb,+BAMF,qBAAK1C,UAAU,wBAAwB+C,IAAKxC,EAA5C,SACKO,OClFI,SAASkC,IACtB,OACE,cAAC5C,EAAD,UACE,cAACE,EAAD,M,MCSN4B,SAASe,iBAAiB,oBAT1B,WACEC,IAASC,OACP,cAAC,IAAD,UACE,cAACH,EAAD,MAEFd,SAASP,cAAc,e","file":"static/js/main.8d7149ae.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-altogironew.72b4684c.svg\";","import logoImg from '../assets/logo-altogironew.svg'\n\nexport default function NavBar() {\n  return (\n    <div className=\"nav\">\n      <img src={logoImg} alt=\"Logo\" className=\"logo\" />\n    </div>\n  );\n};\n\n\n","\nimport { ReactNode } from \"react\";\nimport NavBar from \"./Navbar\";\n\ninterface LayoutProps { \n  children: ReactNode;\n}\n\nexport default function Layout({ children }: LayoutProps)  {\n  return (\n    <div>\n      <NavBar />\n\n      <div className=\"container\">\n        <div className=\"content\">{children}</div>\n      </div>\n    </div>\n  );\n};\n\n\n","import { FormEvent, useRef, useState } from \"react\";\nimport QRCode from \"qrcode.react\";\n\n//import QrLogoImg2 from '../assets/altogiro-preta.svg'\n\nexport default function QrCode() {\n  const qrRef = useRef<any | undefined>();\n\n  const [url, setUrl] = useState(\"\");\n  const [color, setColor ] = useState(\"#141926\")\n\n  /*const downloadQRCode = (evt: FormEvent) => {\n    evt.preventDefault(); \n    let canvas = qrRef.current.querySelector(\"canvas\");\n    let image = canvas.toDataURL(\"image/png\");\n    let anchor = document.createElement(\"a\");\n    anchor.href = image;\n    anchor.download = `${url}.png`;\n    document.body.appendChild(anchor);\n    anchor.click();\n    document.body.removeChild(anchor);\n  \n  }; */\n\n    \n   const downloadQRCode = (evt: FormEvent) => {\n    evt.preventDefault(); \n    \n    const svg = qrRef.current.querySelector(\"svg\");\n    const svgXML = new XMLSerializer().serializeToString(svg);\n    const dataUrl = \"data:image/svg,\" + encodeURIComponent(svgXML);\n  \n    const anchor = document.createElement(\"a\");\n    anchor.href = dataUrl;\n    anchor.download = `${url}.svg`;\n    document.body.appendChild(anchor);\n    anchor.click();\n    document.body.removeChild(anchor);\n  };\n\n  \n\n  const qrCode = (\n    <QRCode \n      id=\"qrCodeId\"\n      size={320}\n      renderAs= \"svg\"\n      value={url}\n      bgColor=\"white\"\n      fgColor={color}\n      level=\"Q\"\n    /* imageSettings={{\n        src: QrLogoImg2,\n        excavate: true,\n        width: 120 * 0.2,\n       height: 300 * 0.1,\n      }} */\n    />\n  )\n\n  return (\n    <div className=\"qr-container\">\n\n      <form onSubmit={downloadQRCode} className=\"qr-container__form\">\n       \n        <input\n          type=\"text\"\n          value={url}\n          onChange={(e) => setUrl(e.target.value)}\n          placeholder=\"https://produtos.altogiro.net/referencia\"\n        />\n       \n        <input\n          type=\"text\"\n          value={color}\n          onChange={(e) => setColor(e.target.value)}\n          placeholder=\"input rgb, hex or color\"\n        />\n\n        <button type=\"submit\">Baixar QR Code</button>\n\n      </form>\n\n      \n   \n      <div className=\"qr-container__qr-code\" ref={qrRef}>\n          {qrCode}\n      </div>\n    </div>\n  );\n}\n","import Layout from \"./components/Layout\";\nimport QrCode from \"./components/QrCode\";\n\n\nexport default function App() {\n  return (\n    <Layout>\n      <QrCode />\n    </Layout>\n  );\n};\n","import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\n\nimport \"./styles/main.scss\"\n\nfunction main() {\n  ReactDOM.render(\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>,\n    document.querySelector(\".root\")\n  );\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", main);"],"sourceRoot":""}